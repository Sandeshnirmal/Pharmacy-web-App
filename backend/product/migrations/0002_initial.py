# Generated by Django 5.2.3 on 2025-07-25 09:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='composition',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_compositions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_products', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='generic_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.genericname'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='product.product'),
        ),
        migrations.AddField(
            model_name='batch',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='product.product'),
        ),
        migrations.AddField(
            model_name='productcomposition',
            name='composition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.composition'),
        ),
        migrations.AddField(
            model_name='productcomposition',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='compositions',
            field=models.ManyToManyField(related_name='products', through='product.ProductComposition', to='product.composition'),
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product'),
        ),
        migrations.AddField(
            model_name='productreview',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='product.product'),
        ),
        migrations.AddField(
            model_name='productreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='producttagassignment',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='product.product'),
        ),
        migrations.AddField(
            model_name='producttagassignment',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.producttag'),
        ),
        migrations.AddField(
            model_name='productviewhistory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product'),
        ),
        migrations.AddField(
            model_name='productviewhistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product'),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='composition',
            index=models.Index(fields=['name'], name='composition_name_336319_idx'),
        ),
        migrations.AddIndex(
            model_name='composition',
            index=models.Index(fields=['is_active'], name='composition_is_acti_01e6f7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productcomposition',
            unique_together={('product', 'composition')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_name_6f9890_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand_name'], name='products_brand_n_a8dacd_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['manufacturer'], name='products_manufac_6e19ae_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='products_is_acti_cb485f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['prescription_type'], name='products_prescri_df9763_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('name', 'manufacturer', 'dosage_form')},
        ),
        migrations.AlterUniqueTogether(
            name='productreview',
            unique_together={('product', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='producttagassignment',
            unique_together={('product', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('user', 'product')},
        ),
    ]
